Terminals unused in grammar

   ID
   STRING
   VERY
   SO
   DOGETYPE
   IS
   LOTS
   PLZ
   GOTOTHEMOON
   RLY
   NOTRLY
   BUT
   NEXT
   NOT
   AND
   OR
   BIGGER
   SMALLER
   BIGGERISH
   SMALLERISH
   SAME
   '+'
   '-'
   '*'
   '/'


State 13 conflicts: 4 shift/reduce
State 14 conflicts: 4 shift/reduce
State 15 conflicts: 4 shift/reduce
State 16 conflicts: 4 shift/reduce


Grammar

    0 $accept: S $end

    1 S: E

    2 E: E MANY E
    3  | E FEW E
    4  | E LESS E
    5  | E MORE E
    6  | F

    7 F: '(' E ')'
    8  | NUMBER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7
')' (41) 7
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
NUMBER (258) 8
ID (259)
STRING (260)
VERY (261)
SO (262)
DOGETYPE (263)
IS (264)
MORE (265) 5
LESS (266) 4
LOTS (267)
FEW (268) 3
PLZ (269)
GOTOTHEMOON (270)
RLY (271)
NOTRLY (272)
BUT (273)
MANY (274) 2
NEXT (275)
NOT (276)
AND (277)
OR (278)
BIGGER (279)
SMALLER (280)
BIGGERISH (281)
SMALLERISH (282)
SAME (283)


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
S (36)
    on left: 1, on right: 0
E (37)
    on left: 2 3 4 5 6, on right: 1 2 3 4 5 7
F (38)
    on left: 7 8, on right: 6


State 0

    0 $accept: . S $end

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    S  go to state 3
    E  go to state 4
    F  go to state 5


State 1

    8 F: NUMBER .

    $default  reduce using rule 8 (F)


State 2

    7 F: '(' . E ')'

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    E  go to state 6
    F  go to state 5


State 3

    0 $accept: S . $end

    $end  shift, and go to state 7


State 4

    1 S: E .
    2 E: E . MANY E
    3  | E . FEW E
    4  | E . LESS E
    5  | E . MORE E

    MORE  shift, and go to state 8
    LESS  shift, and go to state 9
    FEW   shift, and go to state 10
    MANY  shift, and go to state 11

    $default  reduce using rule 1 (S)


State 5

    6 E: F .

    $default  reduce using rule 6 (E)


State 6

    2 E: E . MANY E
    3  | E . FEW E
    4  | E . LESS E
    5  | E . MORE E
    7 F: '(' E . ')'

    MORE  shift, and go to state 8
    LESS  shift, and go to state 9
    FEW   shift, and go to state 10
    MANY  shift, and go to state 11
    ')'   shift, and go to state 12


State 7

    0 $accept: S $end .

    $default  accept


State 8

    5 E: E MORE . E

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    E  go to state 13
    F  go to state 5


State 9

    4 E: E LESS . E

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    E  go to state 14
    F  go to state 5


State 10

    3 E: E FEW . E

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    E  go to state 15
    F  go to state 5


State 11

    2 E: E MANY . E

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    E  go to state 16
    F  go to state 5


State 12

    7 F: '(' E ')' .

    $default  reduce using rule 7 (F)


State 13

    2 E: E . MANY E
    3  | E . FEW E
    4  | E . LESS E
    5  | E . MORE E
    5  | E MORE E .

    MORE  shift, and go to state 8
    LESS  shift, and go to state 9
    FEW   shift, and go to state 10
    MANY  shift, and go to state 11

    MORE      [reduce using rule 5 (E)]
    LESS      [reduce using rule 5 (E)]
    FEW       [reduce using rule 5 (E)]
    MANY      [reduce using rule 5 (E)]
    $default  reduce using rule 5 (E)


State 14

    2 E: E . MANY E
    3  | E . FEW E
    4  | E . LESS E
    4  | E LESS E .
    5  | E . MORE E

    MORE  shift, and go to state 8
    LESS  shift, and go to state 9
    FEW   shift, and go to state 10
    MANY  shift, and go to state 11

    MORE      [reduce using rule 4 (E)]
    LESS      [reduce using rule 4 (E)]
    FEW       [reduce using rule 4 (E)]
    MANY      [reduce using rule 4 (E)]
    $default  reduce using rule 4 (E)


State 15

    2 E: E . MANY E
    3  | E . FEW E
    3  | E FEW E .
    4  | E . LESS E
    5  | E . MORE E

    MORE  shift, and go to state 8
    LESS  shift, and go to state 9
    FEW   shift, and go to state 10
    MANY  shift, and go to state 11

    MORE      [reduce using rule 3 (E)]
    LESS      [reduce using rule 3 (E)]
    FEW       [reduce using rule 3 (E)]
    MANY      [reduce using rule 3 (E)]
    $default  reduce using rule 3 (E)


State 16

    2 E: E . MANY E
    2  | E MANY E .
    3  | E . FEW E
    4  | E . LESS E
    5  | E . MORE E

    MORE  shift, and go to state 8
    LESS  shift, and go to state 9
    FEW   shift, and go to state 10
    MANY  shift, and go to state 11

    MORE      [reduce using rule 2 (E)]
    LESS      [reduce using rule 2 (E)]
    FEW       [reduce using rule 2 (E)]
    MANY      [reduce using rule 2 (E)]
    $default  reduce using rule 2 (E)
